![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image1.png){width="10.0in"
height="5.625in"}![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image2.png){width="10.0in"
height="5.625in"}

Cryptography

S2Day5crypto.md

![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image1.png){width="10.0in"
height="5.625in"}![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image3.png){width="10.0in"
height="5.625in"}

> recall
>
> LAST TIME TOPICS

![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image1.png){width="10.0in"
height="5.625in"}![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image3.png){width="10.0in"
height="5.625in"}

> Topics
>
> ● What is Cryptography?
>
> ● Types of Cryptography
>
> ● Terms of Cryptography
>
> ● Kinds of Cryptography
>
> ● Tools
>
> ● Python for Crypto
>
> ● Obfuscation

![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image1.png){width="10.0in"
height="5.625in"}![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image3.png){width="10.0in"
height="5.625in"}

> What is Cryptography?

● Cryptography is the science of secret, or hidden writing

● Crypto =\> Hidden/Secret \| Graphy =\> Writing

● Used to secure your data/text.

● It has two main Components:

> a\. Encryption
>
> i\. Practice of hiding messages so that they can not be read by
>
> anyone other than the intended recipient
>
> b\. Authentication & Integrity
>
> i\. Ensuring that users of data/resources are the persons they
>
> claim to be and that a message has not been altered

![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image4.png){width="10.0in"
height="5.625in"}![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image4.png){width="10.0in"
height="5.625in"}

> Encryption

**Cipher**

+-----------------------------------+-----------------------------------+
| > ●\                              | > Cipher is a method for          |
| > ●\                              | > encrypting messages\            |
| > ●\                              | > Encryption algorithms are       |
| > ●\                              | > standardized & published\       |
| > ●                               | > The key which is an input to    |
|                                   | > the algorithm is secret\        |
| ●                                 | > **Key**: is a string of numbers |
|                                   | > or characters\                  |
|                                   | > If same key is used for         |
|                                   | > encryption & decryption the     |
|                                   | > algorithm is called symmetric\  |
|                                   | > If different keys are used for  |
|                                   | > encryption & decryption the     |
|                                   | > algorithm is called asymmetric  |
+===================================+===================================+
+-----------------------------------+-----------------------------------+

![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image5.png){width="10.0in"
height="5.625in"}![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image5.png){width="10.0in"
height="5.625in"}

> Symmetric Algorithms

+-----------------+-----------------+-----------------+-----------------+
| ●               | > Algorithms in |                 |                 |
|                 | > which the key |                 |                 |
| ●               | > for           |                 |                 |
|                 | > encryption    |                 |                 |
|                 | > and           |                 |                 |
|                 | > decryption    |                 |                 |
|                 | > are the same  |                 |                 |
|                 | > are Symmetric |                 |                 |
+=================+=================+=================+=================+
|                 | ○               | > Example:      |                 |
|                 |                 | > Caesar Cipher |                 |
+-----------------+-----------------+-----------------+-----------------+
|                 | > Types:        |                 |                 |
+-----------------+-----------------+-----------------+-----------------+
|                 | ○               | > Block Ciphers |                 |
+-----------------+-----------------+-----------------+-----------------+
|                 | ■               |                 | > Encrypt data  |
|                 |                 |                 | > one block at  |
|                 |                 |                 | > a time        |
|                 |                 |                 | > (typically    |
+-----------------+-----------------+-----------------+-----------------+
|                 | > 64 bits, or   |                 |                 |
|                 | > 128 bits)     |                 |                 |
+-----------------+-----------------+-----------------+-----------------+
|                 | ■               |                 | > Used for a    |
|                 |                 |                 | > single        |
|                 |                 |                 | > message       |
+-----------------+-----------------+-----------------+-----------------+
|                 | ○               | > Stream        |                 |
|                 |                 | > Ciphers       |                 |
+-----------------+-----------------+-----------------+-----------------+
|                 | ■               |                 | > Encrypt data  |
|                 |                 |                 | > one bit or    |
|                 |                 |                 | > one byte at a |
|                 |                 |                 | > time          |
+-----------------+-----------------+-----------------+-----------------+
|                 | ■               |                 | > Used if data  |
|                 |                 |                 | > is a constant |
|                 |                 |                 | > stream of     |
+-----------------+-----------------+-----------------+-----------------+
|                 | > information   |                 |                 |
+-----------------+-----------------+-----------------+-----------------+

![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image6.png){width="10.0in"
height="5.625in"}![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image6.png){width="10.0in"
height="5.625in"}

> Substitution Ciphers\
> **Caesar Cipher**
>
> Caesar Cipher is a method in which each letter in the alphabet is
> rotated by three letters as shown

![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image7.png){width="10.0in"
height="5.625in"}![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image7.png){width="10.0in"
height="5.625in"}

> ...

![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image8.png){width="10.0in"
height="5.625in"}![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image8.png){width="10.0in"
height="5.625in"}

> Substitution Cipher
>
> Using a key to shift alphabet
>
> ● Obtain a key to for the algorithm and then shift the alphabets
>
> ○ For instance if the key is ***word*** we will shift all the letters
> by four and remove the
>
> letters w, o, r, & d from the encryption
>
> ● We have to ensure that the mapping is one-to-one
>
> ○ no single letter in plain text can map to two different letters in
> cipher text
>
> ○ no single letter in cipher text can map to two different letters in
> plain text

![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image9.png){width="10.0in"
height="5.625in"}![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image9.png){width="10.0in"
height="5.625in"}

Replacing the letters by 1 shift\
we can get different rotations. To\
do this we can use this website.

This encoding is called rot\
encoding

Website:

![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image1.png){width="10.0in"
height="5.625in"}![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image3.png){width="10.0in"
height="5.625in"}

> Limitation
>
> ● Any exposure to the secret key compromises
>
> confidentiality of ciphertext
>
> ● A key needs to be delivered to the recipient of the coded
>
> message for it to be deciphered
>
> ○ Some intruders can get the key and BOOM! No secret
>
> anymore.

![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image1.png){width="10.0in"
height="5.625in"}![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image3.png){width="10.0in"
height="5.625in"}

> Exercise 1
>
> 1\. Change "Pass1233" text to caesar Cipher
>
> 2\. What is the starting alphabet to produce "Rexler" text by shifting
>
> 3\. What is the encoding method of "Rexler"
>
> a\. Answer: Rot\_\_
>
> 4\. Change "Hello There" to cipher with a key to alphabet shift of
>
> "HACK"

![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image10.png){width="10.0in"
height="5.625in"}![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image10.png){width="10.0in"
height="5.625in"}

> Asymmetric Encryption

● Uses a pair of keys for encryption

> ○ Public key for encryption
>
> ○ Private key for decryption

● Messages encoded using public key can only be decoded by the private
key

> ○ Secret transmission of key for decryption is not required
>
> ■ Public key can be exposed so, if i need to send you a message i just
> ask you for
>
> your public key and i will encrypt the message with your public key.
> When you
>
> get the ciphertext you can decrypt it with your private key.
>
> ○ Every entity can generate a key pair(private&public) and release its
> public key

![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image1.png){width="10.0in"
height="5.625in"}![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image11.png){width="10.0in"
height="5.625in"}

> Types of asymmetric enc.
>
> ● Two most popular algorithms are RSA & El Gamal
>
> ● RSA
>
> ○ Developed by Ron **R**ivest, Adi **S**hamir, Len **A**delman
>
> ○ Both public and private key are interchangable
>
> ○ Variable Key Size (512, 1024, or 2048 bits)
>
> ○ Most popular public key algorithm
>
> ○ It have a maths formulas for generating the keys.
>
> ● El Gamal
>
> ○ Developed by Taher ElGamal
>
> ○ Variable key size (512 or 1024 bits)
>
> ○ Less common than RS

![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image1.png){width="10.0in"
height="5.625in"}![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image3.png){width="10.0in"
height="5.625in"}

> 3 Terms of Cryptography
>
> 1\) Encoding/ decoding
>
> a\) This is a method of creating Cipher text with our using any key
>
> b\) This can be done by doing math on the given input/substitution
>
> i\) Examples: base64,base32,rot...
>
> 2\) Encrypting/Decrypting
>
> a\) This is method of creating Cipher text with keys.
>
> b\) To decrypts this kind u need to have the private key
>
> i\) Example: DES,AES,RSA
>
> 3\) Hashing
>
> a\) This is a method of creating Cipher text with respect to a created
> hash
>
> b\) To reverse the hash, you just search for some match, you don\'t
>
> decrypt/decode it.
>
> c\) Salt: is a random string used for data modification for password
> protection.
>
> i\) Example: MD5,sha254,\...

![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image1.png){width="10.0in"
height="5.625in"}![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image3.png){width="10.0in"
height="5.625in"}

> Kinds of encodings/encryptions
>
> ● Base2 01100010 01110010 01100101 01100001 01101011 01101001
>
> 01110100
>
> ● Base8 142 162 145 141 153 151 164
>
> ● Base16 62 72 65 61 6b 69 74
>
> ● Base32 MJZGKYLLNF2A====
>
> ● Base58 4jP4KDubX1
>
> ● Base62 22udqyscMu
>
> ● Base64 YnJlYWtpdA==
>
> ● Base85 \@WH\$gCM@k
>
> ● Base91 %zmfv;:YH
>
> ● URL encode: hello%20there%20%3F
>
> ● Md5: 5d41402abc4b2a76b9719d911017c592
>
> ● Sha1: aaf4c61ddcc5e8a2dabede0f3b482cd9aea9434d
>
> ● Rot : Uryyb, Frphevgl Grfgref =\> look for some random word that
> looks rotated

![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image12.png){width="10.0in"
height="5.625in"}![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image12.png){width="10.0in"
height="5.625in"}

> tools

● There are lots of encodings/encryption

● To identify this we will need some

> tools/sites

● Tools:

> ○ hashid
>
> ■ hashid \<hash\>
>
> ○ Cyber chef (web)

![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image13.png){width="10.0in"
height="5.625in"}![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image13.png){width="10.0in"
height="5.625in"}

> ...

● Goto google and

> type cyberchef

● Click on the 1st link.

![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image14.png){width="10.0in"
height="5.625in"}![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image14.png){width="10.0in"
height="5.625in"}

> ...

● Search for magic

● Drag and drop it, to the

> recipe.

![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image15.png){width="10.0in"
height="5.625in"}![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image15.png){width="10.0in"
height="5.625in"}

> ...

● Add your text to the input

● Look at the output it is the

> guess of what the hash can be

![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image1.png){width="10.0in"
height="5.625in"}![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image3.png){width="10.0in"
height="5.625in"}

> decoding/decrypting
>
> There are so, many way to reverse some hashes/ciphers.
>
> ● Hashes
>
> ○ Craskstation.net(non-salted)
>
> ○ Own cracking(google the name)
>
> ● Encodings
>
> ○ CyberChef

![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image16.png){width="10.0in"
height="5.625in"}![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image16.png){width="10.0in"
height="5.625in"}

> Crackstation

![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image17.png){width="10.0in"
height="5.625in"}![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image17.png){width="10.0in"
height="5.625in"}

> Own pages

By searching the hash type you

can get the decoder/decrypter.

![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image18.png){width="10.0in"
height="5.625in"}![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image18.png){width="10.0in"
height="5.625in"}

> also ...

Searching the hash is Good

![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image19.png){width="10.0in"
height="5.625in"}![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image19.png){width="10.0in"
height="5.625in"}

> Cyber chef

By searching any encryption you

can decode/decrypt it.

> ● We use from to decrypt
>
> ● We use to to encrypt

![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image1.png){width="10.0in"
height="5.625in"}![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image3.png){width="10.0in"
height="5.625in"}

> Exercise 2
>
> 1\) What is the hashing algorithm of this text
>
> "aaf4c61ddcc5e8a2dabede0f3b482cd9aea9434d"
>
> 2\) What is the decoded text of
>
> "SGVsbG8sIFNlY3VyaXR5IFRlc3RlcnM="
>
> 3\) What is the decoded text of
>
> "KUZFM2TELBFHAZCINNTVMR2WPJSEOVTZMN3T2PI="
>
> 4\) What is the decrypted text of
>
> "21232f297a57a5a743894a0e4a801fc3"

![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image1.png){width="10.0in"
height="5.625in"}![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image3.png){width="10.0in"
height="5.625in"}

> Python for cryptography
>
> ● We can use programming to do tools that can do our own encryption
> and
>
> encoding hash type
>
> ● There are so many methods, even you can do the encoding/decodeing
> for the
>
> base64...
>
> ● You just need to understand the maths.
>
> ● Now i will show u simple XOR'ing example
>
> ○ What is XOR?

![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image20.png){width="10.0in"
height="5.625in"}![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image20.png){width="10.0in"
height="5.625in"}

> Pseudo code

![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image21.png){width="10.0in"
height="5.625in"}![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image21.png){width="10.0in"
height="5.625in"}

> output

![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image1.png){width="10.0in"
height="5.625in"}![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image3.png){width="10.0in"
height="5.625in"}

> test
>
> Let's write it by our own to understand it
>
> correctly.

![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image1.png){width="10.0in"
height="5.625in"}![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image3.png){width="10.0in"
height="5.625in"}

> Exercise 3

+-----------------+-----------------+-----------------+-----------------+
| 1\.             | > Write a       |                 |                 |
|                 | > program that  |                 |                 |
| 2\.             | > accepts a     |                 |                 |
|                 | > phone number, |                 |                 |
|                 | > then encode   |                 |                 |
|                 | > it by         |                 |                 |
|                 | > multiplying   |                 |                 |
|                 | > the phone     |                 |                 |
|                 | > number by     |                 |                 |
|                 | > 123456. Also  |                 |                 |
|                 | > do the        |                 |                 |
|                 | > decoder       |                 |                 |
+=================+=================+=================+=================+
|                 | a\.             | > Accepts only  |                 |
|                 |                 | > 251...        |                 |
|                 |                 | > numbers dot   |                 |
|                 |                 | > accept 09...  |                 |
+-----------------+-----------------+-----------------+-----------------+
|                 | > Do the caesar |                 |                 |
|                 | > cipher        |                 |                 |
|                 | > algorithm     |                 |                 |
|                 | > with python   |                 |                 |
+-----------------+-----------------+-----------------+-----------------+
|                 | a\.             | > Accept 1      |                 |
|                 |                 | >               |                 |
|                 |                 |  numbers(string |                 |
|                 |                 | > msg )         |                 |
+-----------------+-----------------+-----------------+-----------------+
|                 | b\.             | > 1 variable    |                 |
|                 |                 | > for the       |                 |
|                 |                 | > storing the   |                 |
|                 |                 | > changed value |                 |
+-----------------+-----------------+-----------------+-----------------+
|                 | c\.             | > Iterate with  |                 |
|                 |                 | > the message   |                 |
|                 |                 | > accepted      |                 |
+-----------------+-----------------+-----------------+-----------------+
|                 | i\.             |                 | For every       |
|                 |                 |                 | string change   |
|                 |                 |                 | it to unicode   |
|                 |                 |                 | decimal and add |
|                 |                 |                 | 3 to it         |
+-----------------+-----------------+-----------------+-----------------+
|                 | ii\.            |                 | > Then change   |
|                 |                 |                 | > the unicode   |
|                 |                 |                 | > decimal to    |
|                 |                 |                 | > character     |
+-----------------+-----------------+-----------------+-----------------+
|                 | iii\.           |                 | > Add the       |
|                 |                 |                 | > character to  |
|                 |                 |                 | > the storing   |
|                 |                 |                 | > variable      |
+-----------------+-----------------+-----------------+-----------------+
|                 | d\.             | > Display the   |                 |
|                 |                 | > changed       |                 |
|                 |                 | > variable      |                 |
+-----------------+-----------------+-----------------+-----------------+
|                 | i\.             |                 | > "The encoded  |
|                 |                 |                 | > Text is: ...  |
|                 |                 |                 | > "             |
+-----------------+-----------------+-----------------+-----------------+

![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image22.png){width="10.0in"
height="5.625in"}![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image22.png){width="10.0in"
height="5.625in"}

> Base64 decode/encode

![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image23.png){width="10.0in"
height="5.625in"}![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image23.png){width="10.0in"
height="5.625in"}

> Obfuscation
>
> ● In software development, *obfuscation* is the act of creating source
> or machine code that is difficult for humans or computers to
> understand.
>
> ● As we know High level programming lang. are easy to understand, so
> if hackers got your code he can read it, but to make it more difficult
> we use this technique

+-----------------------+-----------------------+-----------------------+
| ●                     | > This was the code   | obfuscated            |
+=======================+=======================+=======================+
+-----------------------+-----------------------+-----------------------+

![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image24.png){width="10.6875in"
height="6.011719160104987in"}![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image24.png){width="10.0in"
height="5.625in"}

> ...\
> My python code obfuscated
>
> Website:

![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image1.png){width="10.0in"
height="5.625in"}![](vertopal_5847c8c48b2c4bed88d245bf1f6b784f/media/image3.png){width="10.0in"
height="5.625in"}

> CLASS IS OVER
>
> 1\. Ask question
>
> 2\. DO the note(read more)
>
> 3\. PRACTICE PRACTICE PRACTICE
